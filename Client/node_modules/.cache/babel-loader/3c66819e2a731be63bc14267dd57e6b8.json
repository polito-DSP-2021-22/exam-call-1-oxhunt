{"ast":null,"code":"var _jsxFileName = \"/home/labinf/exam-call-1-oxhunt/Client/src/components/ModalForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport dayjs from 'dayjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalForm = props => {\n  _s();\n\n  const {\n    task,\n    onClose,\n    onSave\n  } = props; // use controlled form components\n\n  const [description, setDescription] = useState(task ? task.description : '');\n  const [isImportant, setIsImportant] = useState(task ? task.important : false);\n  const [isPrivate, setIsPrivate] = useState(task ? task.private : true);\n  const [deadlineDate, setDeadlineDate] = useState(task && task.deadline ? task.deadline.format('YYYY-MM-DD') : '');\n  const [deadlineTime, setDeadlineTime] = useState(task && task.deadline ? task.deadline.format('HH:mm') : '');\n  const [taskProject, setTaskProject] = useState(task ? task.project : null); // enables / disables react-bootstrap validation report\n\n  const [validated, setValidated] = useState(false); // react-bootstrap validation instructions from https://react-bootstrap.github.io/components/forms/#forms-validation\n\n  const handleSubmit = event => {\n    // stop event default and propagation\n    event.preventDefault();\n    event.stopPropagation();\n    const form = event.currentTarget; // check if form is valid using HTML constraints\n\n    if (!form.checkValidity()) {\n      setValidated(true); // enables bootstrap validation error report\n    } else {\n      // we must re-compose the task object from its separated fields\n      // deadline propery must be created from the form date and time fields\n      // id must be created if already present (edit) not if the task is new\n      let deadline;\n\n      if (deadlineDate !== \"\" && deadlineTime !== \"\") {\n        deadline = dayjs(deadlineDate + \"T\" + deadlineTime);\n      } else if (deadlineDate !== \"\") {\n        deadline = dayjs(deadlineDate + \"T12:00\"); // tasks with no time are due by noon\n      }\n\n      const newTask = Object.assign({}, task, {\n        description,\n        important: isImportant,\n        private: isPrivate,\n        deadline\n      });\n      if (taskProject != null) newTask.project = taskProject;\n      onSave(newTask);\n    }\n  };\n\n  const handleDeadlineDate = ev => {\n    // if date is inserted, set time to noon\n    // if date is cacelled, cancel time too\n    setDeadlineDate(ev.target.value);\n\n    if (ev.target.value !== \"\") {\n      if (deadlineTime === \"\") setDeadlineTime(\"12:00\");\n    } else {\n      setDeadlineTime(\"\");\n    }\n  };\n\n  const handleDeadlineTime = ev => {\n    // if time is inserted, set date to today\n    // if time is cacelled, cancel date too\n    setDeadlineTime(ev.target.value);\n\n    if (ev.target.value !== \"\") {\n      if (deadlineDate === \"\") setDeadlineDate(dayjs().format('YYYY-MM-DD'));\n    } else {\n      setDeadlineDate(\"\");\n    }\n  }; // noValidate : You can disable the default UI by adding the HTML noValidate attribute to your <Form> or <form> element.\n  // Form.Control.Feedback : reports feedback in react-bootstrap style\n  // since the modal is added to the page only when needed the show flag can be always true\n\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: true,\n    onHide: onClose,\n    animation: false,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"form-description\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"description\",\n            placeholder: \"Enter description\",\n            value: description,\n            onChange: ev => setDescription(ev.target.value),\n            required: true,\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please provide a description.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"form-project\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"project\",\n            placeholder: \"Enter a new task project\"\n            /*value = {taskProject}*/\n            ,\n            onChange: ev => setTaskProject(ev.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"form-is-important\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            custom: true,\n            type: \"checkbox\",\n            label: \"Important\",\n            name: \"isImportant\",\n            checked: isImportant,\n            onChange: ev => setIsImportant(ev.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"form-is-private\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            custom: true,\n            type: \"checkbox\",\n            label: \"Private\",\n            name: \"isPrivate\",\n            checked: isPrivate,\n            onChange: ev => setIsPrivate(ev.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"form-deadline-date\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Deadline Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"date\",\n            name: \"deadlineDate\",\n            value: deadlineDate,\n            onChange: handleDeadlineDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"form-deadline-time\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Deadline Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"time\",\n            name: \"deadlineTime\",\n            value: deadlineTime,\n            onChange: handleDeadlineTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: onClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalForm, \"4QIOspNEHORljX74HE6VcCErSVE=\");\n\n_c = ModalForm;\nexport default ModalForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalForm\");","map":{"version":3,"sources":["/home/labinf/exam-call-1-oxhunt/Client/src/components/ModalForm.js"],"names":["React","useState","Modal","Form","Button","dayjs","ModalForm","props","task","onClose","onSave","description","setDescription","isImportant","setIsImportant","important","isPrivate","setIsPrivate","private","deadlineDate","setDeadlineDate","deadline","format","deadlineTime","setDeadlineTime","taskProject","setTaskProject","project","validated","setValidated","handleSubmit","event","preventDefault","stopPropagation","form","currentTarget","checkValidity","newTask","Object","assign","handleDeadlineDate","ev","target","value","handleDeadlineTime","checked"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {Modal, Form, Button} from 'react-bootstrap';\nimport dayjs from 'dayjs';\n\n\nconst ModalForm = (props) => {\n  const { task, onClose, onSave } = props;\n\n  // use controlled form components\n  const [description, setDescription] = useState(task ? task.description : '');\n  const [isImportant, setIsImportant] = useState(task ? task.important : false);\n  const [isPrivate, setIsPrivate] = useState(task ? task.private : true);\n  const [deadlineDate, setDeadlineDate] = useState( (task && task.deadline) ? task.deadline.format('YYYY-MM-DD') : '');\n  const [deadlineTime, setDeadlineTime] = useState( (task && task.deadline) ? task.deadline.format('HH:mm') : '');\n  const [taskProject, setTaskProject] = useState(task ? task.project : null);\n  \n\n  // enables / disables react-bootstrap validation report\n  const [validated, setValidated] = useState(false);\n\n  // react-bootstrap validation instructions from https://react-bootstrap.github.io/components/forms/#forms-validation\n  const handleSubmit = (event) => {\n    \n    // stop event default and propagation\n    event.preventDefault();\n    event.stopPropagation(); \n\n    const form = event.currentTarget; \n\n    // check if form is valid using HTML constraints\n    if (!form.checkValidity()) { \n      setValidated(true); // enables bootstrap validation error report\n    } else {\n      // we must re-compose the task object from its separated fields\n      // deadline propery must be created from the form date and time fields\n      // id must be created if already present (edit) not if the task is new\n\n      let deadline;\n      if (deadlineDate !== \"\" && deadlineTime !== \"\") {\n        deadline = dayjs(deadlineDate + \"T\" + deadlineTime);\n      }\n      else if (deadlineDate !== \"\") {\n        deadline = dayjs(deadlineDate + \"T12:00\"); // tasks with no time are due by noon\n      }\n\n      const newTask = Object.assign({}, task, { description, important: isImportant, private: isPrivate, deadline} );\n      if(taskProject != null) newTask.project = taskProject;\n\n      onSave(newTask);\n    }\n  }\n\n  const handleDeadlineDate = (ev) => {\n      // if date is inserted, set time to noon\n      // if date is cacelled, cancel time too\n      setDeadlineDate(ev.target.value);\n      if (ev.target.value !== \"\") {\n        if (deadlineTime === \"\") setDeadlineTime(\"12:00\");\n      } else {\n        setDeadlineTime(\"\");\n      }\n  }\n\n  const handleDeadlineTime = (ev) => {\n      // if time is inserted, set date to today\n      // if time is cacelled, cancel date too\n      setDeadlineTime(ev.target.value);\n      if (ev.target.value !== \"\") {\n        if (deadlineDate === \"\") setDeadlineDate(dayjs().format('YYYY-MM-DD'));\n      } else {\n        setDeadlineDate(\"\");\n      }\n  }\n\n  // noValidate : You can disable the default UI by adding the HTML noValidate attribute to your <Form> or <form> element.\n  // Form.Control.Feedback : reports feedback in react-bootstrap style\n  // since the modal is added to the page only when needed the show flag can be always true\n  return (\n    <Modal show onHide={onClose} animation={false}>\n      <Modal.Header closeButton>\n        <Modal.Title>Add task</Modal.Title>\n      </Modal.Header>\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\n        <Modal.Body>\n          <Form.Group controlId=\"form-description\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control type=\"text\" name=\"description\" placeholder=\"Enter description\" value={description}\n            onChange={(ev) => setDescription(ev.target.value)} required autoFocus />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide a description.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"form-project\">\n              <Form.Label>Project</Form.Label>\n              <Form.Control type=\"text\" name=\"project\" placeholder=\"Enter a new task project\" /*value = {taskProject}*/ onChange={(ev) => setTaskProject(ev.target.value)}/>\n          </Form.Group>\n          <Form.Group controlId=\"form-is-important\">\n            <Form.Check custom type=\"checkbox\" label=\"Important\" name=\"isImportant\" checked={isImportant} onChange={(ev) => setIsImportant(ev.target.checked)} />\n          </Form.Group>\n          <Form.Group controlId=\"form-is-private\">\n            <Form.Check custom type=\"checkbox\" label=\"Private\" name=\"isPrivate\" checked={isPrivate} onChange={(ev) => setIsPrivate(ev.target.checked)} />\n          </Form.Group>\n          <Form.Group controlId=\"form-deadline-date\">\n            <Form.Label>Deadline Date</Form.Label>\n            <Form.Control type=\"date\" name=\"deadlineDate\" value={deadlineDate} onChange={handleDeadlineDate} />\n          </Form.Group>\n          <Form.Group controlId=\"form-deadline-time\">\n            <Form.Label>Deadline Time</Form.Label>\n            <Form.Control type=\"time\" name=\"deadlineTime\" value={deadlineTime} onChange={handleDeadlineTime} />\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={onClose}>Close</Button>\n          <Button variant=\"primary\" type=\"submit\">Save</Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  )\n\n}\n\nexport default ModalForm;\n"]},"metadata":{},"sourceType":"module"}