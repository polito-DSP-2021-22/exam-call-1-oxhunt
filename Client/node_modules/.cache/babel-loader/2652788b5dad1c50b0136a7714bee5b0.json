{"ast":null,"code":"var _jsxFileName = \"/home/labinf/exam-call-1-oxhunt/Client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, useLocation } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport API from './API';\nimport { Container, Row, Col, Button, Toast } from 'react-bootstrap/';\nimport Navigation from './components/Navigation';\nimport Filters from './components/Filters';\nimport ContentList from './components/ContentList';\nimport PublicList from './components/PublicList';\nimport ModalForm from './components/ModalForm';\nimport { LoginForm } from './components/Login';\nimport Assignments from './components/Assignments';\nimport OnlineList from './components/OnlineList';\nimport MiniOnlineList from './components/MiniOnlineList';\nimport { Route, useRouteMatch, useHistory, Switch, Redirect } from 'react-router-dom';\nimport websocketSetup from './utils/websocket';\nimport MQTTSetup from './utils/mqtt'; //mqtt client\n\nimport { differentialSubscribe, subscribeToAll } from './utils/mqtt';\nimport dayjs from 'dayjs';\nimport isToday from 'dayjs/plugin/isToday';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ndayjs.extend(isToday);\n\nconst App = () => {\n  // Need to place <Router> above the components that use router hooks\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\n\nconst setActiveTask = tasks => {\n  let activeTask = parseInt(localStorage.getItem('activeTask'));\n  return tasks.map(e => {\n    if (e.id === activeTask) e.active = 1;else e.active = 0;\n    return e;\n  });\n};\n\nlet done = false;\n\nconst Main = () => {\n  _s();\n\n  var activeTask = -1;\n  const location = useLocation(); // This state is an object containing the list of tasks, and the last used ID (necessary to create a new task that has a unique ID)\n\n  const [taskList, setTaskList] = useState([]);\n  const [OwnedTaskList, setOwnedTaskList] = useState([]);\n  const [userList, setUserList] = useState([]);\n  const [onlineList, setOnlineList] = useState([]);\n  const [dirty, setDirty] = useState(true);\n  const MODAL = {\n    CLOSED: -2,\n    ADD: -1\n  };\n  const [selectedTask, setSelectedTask] = useState(MODAL.CLOSED);\n  const [assignedTaskList, setAssignedTaskList] = useState([]);\n  const taskListRef = useRef();\n  taskListRef.current = taskList;\n  const [message, setMessage] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false); // at the beginning, no user is logged in\n\n  const [user, setUser] = useState(null); // active filter is read from the current url\n\n  const match = useRouteMatch('/list/:filter');\n  const activeFilter = match && match.params && match.params.filter ? match.params.filter : 'owned';\n  const history = useHistory(); // useEffect that handles the public tasks\n\n  useEffect(() => {\n    if (!dirty) return;\n\n    if (location.pathname === \"/public\") {\n      console.log(\"public\");\n      API.getPublicTasks(localStorage.getItem('currentPage')).then(tasks => {\n        differentialSubscribe([], \"tasks/selection/\");\n        console.log(\"useEffect: getting public tasks\");\n        setTaskList(setActiveTask(tasks));\n        setDirty(false);\n      }).catch(e => handleErrors(e));\n    }\n  }, [location, dirty]); // useEffect that triggers a reload each time the uri changes\n\n  useEffect(() => {\n    if (location.pathname === \"/public\") subscribeToAll(true, \"tasks/public/\");else subscribeToAll(false, \"tasks/public/\");\n    localStorage.setItem(\"currentPage\", 1);\n    setDirty(true);\n  }, [location.pathname]); // useEffect that handles the reload for the owned and assigned tasks\n\n  useEffect(() => {\n    if (!loggedIn || !dirty) return;\n\n    if (location.pathname === \"/list/owned\") {\n      console.log(\"owned\");\n      API.getTasks('owned', localStorage.getItem('currentPage')).then(tasks => {\n        console.log(\"useEffect: getting owned tasks\");\n        differentialSubscribe(tasks, \"tasks/selection/\");\n        setTaskList(setActiveTask(tasks));\n        setDirty(false);\n      }).catch(e => handleErrors(e));\n    } else if (location.pathname === \"/list/assigned\") {\n      console.log(\"assigned\");\n      API.getTasks('assigned', localStorage.getItem('currentPage')).then(tasks => {\n        console.log(\"useEffect: getting assigned tasks\");\n        differentialSubscribe(tasks, \"tasks/selection/\");\n        setTaskList(setActiveTask(tasks));\n        setDirty(false);\n      }).catch(e => handleErrors(e));\n    }\n  }, [location, loggedIn, dirty]); // useEffect that handles the reload for the assignment page\n\n  useEffect(() => {\n    if (location.pathname === \"/assignment\") {\n      API.getAllOwnedTasks().then(tasks => {\n        setOwnedTaskList(tasks.map(e => {\n          if (e.id === activeTask) e.active = 1;else e.active = 0;\n          return e;\n        }));\n      }).catch(e => handleErrors(e));\n      API.getUsers().then(users => {\n        console.log(users);\n        setUserList(users);\n      }).catch(e => handleErrors(e));\n    }\n  }, [location, activeTask]);\n  useEffect(() => {\n    // check if user is authenticated\n    const checkAuth = async () => {\n      try {\n        // here you have the user info, if already logged in\n        const user = await API.getUserInfo();\n        setUser(user);\n\n        if (user) {\n          setLoggedIn(true);\n        } else {\n          console.log('error');\n        }\n      } catch (err) {\n        console.log(err.error); // mostly unauthenticated user\n      }\n    };\n\n    websocketSetup(setOnlineList, handleErrors);\n    checkAuth();\n  }, []);\n  useEffect(() => {\n    const updatePublicTasksInfo = (topic, parsedMessage) => {\n      const taskId = topic.split(\"/\")[2];\n      let tlist = taskListRef.current;\n      if (!tlist.length) return;\n\n      if (parsedMessage.operation === \"deletion\") {\n        const lengthBefore = tlist.length;\n        tlist = tlist.filter(t => t.id !== parseInt(taskId));\n        const maxSizePage = localStorage.getItem(\"maxSizePage\");\n        const currentPage = localStorage.getItem(\"currentPage\");\n        const totalPages = localStorage.getItem(\"totalPages\");\n        const totalItems = parseInt(localStorage.getItem(\"totalItems\")) + (tlist.length - lengthBefore);\n        console.log(totalItems, maxSizePage * (totalPages - 1));\n\n        if (totalItems <= maxSizePage * (totalPages - 1)) {\n          console.log(\"inside reload: \", currentPage, totalPages);\n          if (currentPage >= totalPages) localStorage.setItem(\"currentPage\", currentPage - 1 ? currentPage - 1 : currentPage);\n          setDirty(true);\n          return;\n        }\n\n        localStorage.setItem(\"totalItems\", totalItems);\n        setTaskList(tlist);\n      } else if (parsedMessage.operation === \"update\") {\n        parsedMessage.deadline = parsedMessage.deadline && dayjs(parsedMessage.deadline);\n        tlist = tlist.filter(t => t.id !== parseInt(taskId));\n        tlist.push(parsedMessage);\n        setTaskList(tlist);\n      } else if (parsedMessage.operation === \"creation\") {\n        console.log(parsedMessage); ///\n\n        const lengthBefore = tlist.length;\n        tlist = tlist.filter(t => t.id !== parseInt(taskId));\n        parsedMessage.deadline = parsedMessage.deadline && dayjs(parsedMessage.deadline);\n        const maxSizePage = localStorage.getItem(\"maxSizePage\");\n        const currentPage = localStorage.getItem(\"currentPage\");\n        const totalPages = localStorage.getItem(\"totalPages\");\n        const totalItems = parseInt(localStorage.getItem(\"totalItems\")) + 1 + tlist.length - lengthBefore;\n\n        if (totalItems > maxSizePage * totalPages) {\n          console.log(\"dirty because:\", totalItems, maxSizePage * totalPages);\n          setDirty(true);\n          return;\n        }\n\n        localStorage.setItem(\"totalItems\", totalItems); // only add the task if on the last page and \n        //if (tlist.length >= maxSizePage) return\n\n        if (currentPage !== totalPages) return;\n        tlist.push(parsedMessage);\n        console.log(tlist);\n        setTaskList(tlist);\n      }\n    };\n\n    const displayTaskSelection = (topic, parsedMessage) => {\n      const taskId = parseInt(topic.split(\"/\")[2]);\n      var index = assignedTaskList.findIndex(x => x.taskId === taskId);\n      let objectStatus = {\n        taskId: taskId,\n        userName: parsedMessage.userName,\n        status: parsedMessage.status\n      };\n      index === -1 ? assignedTaskList.push(objectStatus) : assignedTaskList[index] = objectStatus;\n      setAssignedTaskList(assignedTaskList.map(a => a));\n    };\n\n    if (done !== true) {\n      MQTTSetup(displayTaskSelection, updatePublicTasksInfo);\n      done = true;\n    }\n  }, [assignedTaskList]);\n\n  const deleteTask = task => {\n    API.deleteTask(task).then(() => {\n      // if last task of the page, \n      if (taskList.length - 1 === 0) {\n        const currentPage = localStorage.getItem(\"currentPage\");\n        localStorage.setItem(\"currentPage\", currentPage - 1 ? currentPage - 1 : currentPage);\n      }\n\n      setDirty(true);\n    }).catch(e => handleErrors(e));\n  };\n\n  const completeTask = task => {\n    API.completeTask(task).then(() => {\n      setDirty(true);\n    }).catch(e => handleErrors(e));\n  };\n\n  const findTask = id => {\n    return taskList.find(t => t.id === id);\n  };\n\n  const selectTask = task => {\n    API.selectTask(task, user.id).then(() => API.getUserInfo()).then(() => setTaskList(setActiveTask(taskList))).catch(e => handleErrors(e));\n  }; // show error message in toast\n\n\n  const handleErrors = err => {\n    setMessage({\n      msg: err.error,\n      type: 'danger'\n    });\n    console.log(err.error);\n  }; // add or update a task into the list\n\n\n  const handleSaveOrUpdate = task => {\n    // if the task has an id it is an update\n    if (task.id) {\n      API.updateTask(task).then(response => {\n        if (response.ok) {\n          API.getTasks(activeFilter, localStorage.getItem('currentPage')).then(tasks => {\n            setTaskList(setActiveTask(tasks));\n          }).catch(e => handleErrors(e));\n        }\n      }).catch(e => handleErrors(e)); // otherwise it is a new task to add\n    } else {\n      API.addTask(task).then(() => setDirty(true)).catch(e => handleErrors(e));\n    }\n\n    setSelectedTask(MODAL.CLOSED);\n  };\n\n  const handleEdit = task => {\n    setSelectedTask(task.id);\n  };\n\n  const handleClose = () => {\n    setSelectedTask(MODAL.CLOSED);\n  };\n\n  const handleLogOut = async () => {\n    await API.logOut(); // clean up everything\n\n    setLoggedIn(false);\n    setUser(null);\n    subscribeToAll(false, \"tasks/public/\");\n    differentialSubscribe([], \"tasks/selection/\");\n    setTaskList([]);\n    setDirty(true);\n    localStorage.removeItem('activeTask');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Navigation, {\n        onLogOut: handleLogOut,\n        loggedIn: loggedIn,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toast, {\n      show: message !== '',\n      onClose: () => setMessage(''),\n      delay: 3000,\n      autohide: true,\n      children: /*#__PURE__*/_jsxDEV(Toast.Body, {\n        children: message === null || message === void 0 ? void 0 : message.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"vh-100 below-nav\",\n          children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(LoginForm, {\n            setUser: setUser,\n            setLoggedIn: setLoggedIn,\n            API: API\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/public\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"vheight-100\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: 3,\n            bg: \"light\",\n            className: \"d-block col-4\",\n            id: \"left-sidebar\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\xA0\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MiniOnlineList, {\n              onlineList: onlineList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"col-8\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              className: \"vh-100 below-nav\",\n              children: /*#__PURE__*/_jsxDEV(PublicMgr, {\n                publicList: taskList,\n                setDirty: setDirty\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/online\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"vheight-100\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: 3,\n            bg: \"light\",\n            className: \"d-block col-4\",\n            id: \"left-sidebar\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\xA0\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MiniOnlineList, {\n              onlineList: onlineList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 8,\n            className: \"below-nav\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Online Users\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user\",\n              children: /*#__PURE__*/_jsxDEV(OnlineList, {\n                usersList: onlineList\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/assignment\",\n        children: [loggedIn ? /*#__PURE__*/_jsxDEV(Row, {\n          className: \"vheight-100\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: 3,\n            bg: \"light\",\n            className: \"d-block col-4\",\n            id: \"left-sidebar\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\xA0\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MiniOnlineList, {\n              onlineList: onlineList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 8,\n            bg: \"light\",\n            id: \"left-sidebar\",\n            className: \"collapse d-sm-block below-nav\",\n            children: /*#__PURE__*/_jsxDEV(Assignments, {\n              OwnedTaskList: OwnedTaskList,\n              UserList: userList,\n              handleErrors: handleErrors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 15\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: [\"/list/:filter\"],\n        children: loggedIn ? /*#__PURE__*/_jsxDEV(Row, {\n          className: \"vh-100 below-nav\",\n          children: [/*#__PURE__*/_jsxDEV(TaskMgr, {\n            taskList: taskList,\n            filter: activeFilter,\n            onDelete: deleteTask,\n            onEdit: handleEdit,\n            onComplete: completeTask,\n            onCheck: selectTask,\n            history: history,\n            refresh: setDirty,\n            onlineList: onlineList,\n            assignedTaskList: assignedTaskList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            size: \"lg\",\n            className: \"fixed-right-bottom\",\n            onClick: () => setSelectedTask(MODAL.ADD),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this), selectedTask !== MODAL.CLOSED && /*#__PURE__*/_jsxDEV(ModalForm, {\n            task: findTask(selectedTask),\n            onSave: handleSaveOrUpdate,\n            onClose: handleClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        children: /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/list/owned\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"azDVUEQLOugwmm7FNNsxOiLxyK8=\", false, function () {\n  return [useLocation, useRouteMatch, useHistory];\n});\n\n_c2 = Main;\n\nconst TaskMgr = props => {\n  const {\n    taskList,\n    filter,\n    onDelete,\n    onEdit,\n    onComplete,\n    onCheck,\n    history,\n    refresh,\n    onlineList,\n    assignedTaskList\n  } = props; // ** FILTER DEFINITIONS **\n\n  const filters = {\n    'owned': {\n      label: 'Owned Tasks',\n      id: 'owned'\n    },\n    'assigned': {\n      label: 'Assigned Tasks',\n      id: 'assigned'\n    }\n  }; // if filter is not known apply \"all\"\n\n  const activeFilter = filter && filter in filters ? filter : 'owned';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      sm: 3,\n      bg: \"light\",\n      className: \"d-block col-4\",\n      id: \"left-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(Filters, {\n        items: filters,\n        defaultActiveKey: activeFilter,\n        history: history\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiniOnlineList, {\n        onlineList: onlineList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      className: \"col-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"pb-3\",\n        children: [\"Filter: \", /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"text-muted\",\n          children: activeFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContentList, {\n        tasks: taskList,\n        onDelete: onDelete,\n        onEdit: onEdit,\n        onCheck: onCheck,\n        onComplete: onComplete,\n        filter: activeFilter,\n        refresh: refresh,\n        assignedTaskList: assignedTaskList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c3 = TaskMgr;\n\nconst PublicMgr = props => {\n  const {\n    publicList,\n    setDirty\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      className: \"col-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"pb-3\",\n        children: \"Public Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PublicList, {\n        tasks: publicList,\n        refresh: setDirty\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c4 = PublicMgr;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Main\");\n$RefreshReg$(_c3, \"TaskMgr\");\n$RefreshReg$(_c4, \"PublicMgr\");","map":{"version":3,"sources":["/home/labinf/exam-call-1-oxhunt/Client/src/App.js"],"names":["React","useState","useEffect","useRef","BrowserRouter","Router","useLocation","API","Container","Row","Col","Button","Toast","Navigation","Filters","ContentList","PublicList","ModalForm","LoginForm","Assignments","OnlineList","MiniOnlineList","Route","useRouteMatch","useHistory","Switch","Redirect","websocketSetup","MQTTSetup","differentialSubscribe","subscribeToAll","dayjs","isToday","extend","App","setActiveTask","tasks","activeTask","parseInt","localStorage","getItem","map","e","id","active","done","Main","location","taskList","setTaskList","OwnedTaskList","setOwnedTaskList","userList","setUserList","onlineList","setOnlineList","dirty","setDirty","MODAL","CLOSED","ADD","selectedTask","setSelectedTask","assignedTaskList","setAssignedTaskList","taskListRef","current","message","setMessage","loggedIn","setLoggedIn","user","setUser","match","activeFilter","params","filter","history","pathname","console","log","getPublicTasks","then","catch","handleErrors","setItem","getTasks","getAllOwnedTasks","getUsers","users","checkAuth","getUserInfo","err","error","updatePublicTasksInfo","topic","parsedMessage","taskId","split","tlist","length","operation","lengthBefore","t","maxSizePage","currentPage","totalPages","totalItems","deadline","push","displayTaskSelection","index","findIndex","x","objectStatus","userName","status","a","deleteTask","task","completeTask","findTask","find","selectTask","msg","type","handleSaveOrUpdate","updateTask","response","ok","addTask","handleEdit","handleClose","handleLogOut","logOut","removeItem","TaskMgr","props","onDelete","onEdit","onComplete","onCheck","refresh","filters","label","PublicMgr","publicList"],"mappings":"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","sourcesContent":["import { React, useState, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, useLocation } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport API from './API'\n\nimport { Container, Row, Col, Button, Toast } from 'react-bootstrap/';\n\n\nimport Navigation from './components/Navigation';\nimport Filters from './components/Filters';\nimport ContentList from './components/ContentList';\nimport PublicList from './components/PublicList';\nimport ModalForm from './components/ModalForm';\nimport { LoginForm } from './components/Login';\nimport Assignments from './components/Assignments';\nimport OnlineList from './components/OnlineList';\nimport MiniOnlineList from './components/MiniOnlineList';\n\nimport { Route, useRouteMatch, useHistory, Switch, Redirect } from 'react-router-dom';\nimport websocketSetup from './utils/websocket'\nimport MQTTSetup from './utils/mqtt' //mqtt client\nimport { differentialSubscribe, subscribeToAll } from './utils/mqtt';\nimport dayjs from 'dayjs';\nimport isToday from 'dayjs/plugin/isToday';\ndayjs.extend(isToday);\n\n\nconst App = () => {\n\n  // Need to place <Router> above the components that use router hooks\n  return (\n    <Router>\n      <Main></Main>\n    </Router>\n  );\n\n}\n\nconst setActiveTask = (tasks) => {\n  let activeTask = parseInt(localStorage.getItem('activeTask'))\n  return tasks.map(e => {\n    if (e.id === activeTask) e.active = 1;\n    else e.active = 0;\n    return e;\n  })\n}\nlet done = false;\n\nconst Main = () => {\n  var activeTask = -1;\n  const location = useLocation();\n  // This state is an object containing the list of tasks, and the last used ID (necessary to create a new task that has a unique ID)\n  const [taskList, setTaskList] = useState([]);\n  const [OwnedTaskList, setOwnedTaskList] = useState([]);\n  const [userList, setUserList] = useState([]);\n  const [onlineList, setOnlineList] = useState([]);\n  const [dirty, setDirty] = useState(true);\n  const MODAL = { CLOSED: -2, ADD: -1 };\n  const [selectedTask, setSelectedTask] = useState(MODAL.CLOSED);\n  const [assignedTaskList, setAssignedTaskList] = useState([]);\n  const taskListRef = useRef();\n  taskListRef.current = taskList;\n  const [message, setMessage] = useState('');\n\n  const [loggedIn, setLoggedIn] = useState(false); // at the beginning, no user is logged in\n  const [user, setUser] = useState(null);\n\n  // active filter is read from the current url\n  const match = useRouteMatch('/list/:filter');\n  const activeFilter = (match && match.params && match.params.filter) ? match.params.filter : 'owned';\n\n  const history = useHistory();\n\n  // useEffect that handles the public tasks\n  useEffect(() => {\n    if (!dirty) return;\n    if (location.pathname === \"/public\") {\n      console.log(\"public\")\n      API.getPublicTasks(localStorage.getItem('currentPage'))\n        .then(tasks => {\n          differentialSubscribe([], \"tasks/selection/\")\n          console.log(\"useEffect: getting public tasks\")\n          setTaskList(setActiveTask(tasks));\n          setDirty(false)\n        })\n        .catch(e => handleErrors(e));\n    }\n  }, [location, dirty]);\n\n  // useEffect that triggers a reload each time the uri changes\n  useEffect(() => {\n\n    if (location.pathname === \"/public\") subscribeToAll(true, \"tasks/public/\")\n    else subscribeToAll(false, \"tasks/public/\")\n    localStorage.setItem(\"currentPage\", 1)\n    setDirty(true)\n  }, [location.pathname]);\n\n  // useEffect that handles the reload for the owned and assigned tasks\n  useEffect(() => {\n    if (!loggedIn || !dirty) return;\n    if (location.pathname === \"/list/owned\") {\n      console.log(\"owned\")\n      API.getTasks('owned', localStorage.getItem('currentPage'))\n        .then(tasks => {\n          console.log(\"useEffect: getting owned tasks\")\n          differentialSubscribe(tasks, \"tasks/selection/\")\n          setTaskList(setActiveTask(tasks));\n          setDirty(false)\n        })\n        .catch(e => handleErrors(e));\n    }\n    else if (location.pathname === \"/list/assigned\") {\n      console.log(\"assigned\")\n      API.getTasks('assigned', localStorage.getItem('currentPage'))\n        .then(tasks => {\n          console.log(\"useEffect: getting assigned tasks\")\n          differentialSubscribe(tasks, \"tasks/selection/\")\n          setTaskList(setActiveTask(tasks));\n          setDirty(false)\n        })\n        .catch(e => handleErrors(e));\n    }\n  }, [location, loggedIn, dirty]);\n\n  // useEffect that handles the reload for the assignment page\n  useEffect(() => {\n    if (location.pathname === \"/assignment\") {\n      API.getAllOwnedTasks()\n        .then(tasks => {\n          setOwnedTaskList(tasks.map(e => {\n            if (e.id === activeTask) e.active = 1;\n            else e.active = 0;\n            return e\n          }));\n        })\n        .catch(e => handleErrors(e));\n      API.getUsers()\n        .then(users => {\n          console.log(users)\n          setUserList(users);\n        })\n        .catch(e => handleErrors(e));\n    }\n  }, [location, activeTask]);\n\n\n  useEffect(() => {\n    // check if user is authenticated\n    const checkAuth = async () => {\n      try {\n        // here you have the user info, if already logged in\n        const user = await API.getUserInfo();\n        setUser(user);\n        if (user) {\n          setLoggedIn(true);\n        } else {\n          console.log('error');\n        }\n\n      } catch (err) {\n        console.log(err.error); // mostly unauthenticated user\n      }\n    };\n    websocketSetup(setOnlineList, handleErrors);\n    checkAuth();\n\n  }, []);\n\n  useEffect(() => {\n    const updatePublicTasksInfo = (topic, parsedMessage) => {\n\n      const taskId = topic.split(\"/\")[2];\n\n      let tlist = taskListRef.current;\n      if (!tlist.length) return;\n\n      if (parsedMessage.operation === \"deletion\") {\n        const lengthBefore = tlist.length\n        tlist = tlist.filter(t => t.id !== parseInt(taskId))\n\n        const maxSizePage = localStorage.getItem(\"maxSizePage\")\n        const currentPage = localStorage.getItem(\"currentPage\")\n        const totalPages = localStorage.getItem(\"totalPages\")\n        const totalItems = parseInt(localStorage.getItem(\"totalItems\")) + (tlist.length - lengthBefore)\n\n        console.log(totalItems, maxSizePage * (totalPages - 1))\n        if (totalItems <= maxSizePage * (totalPages - 1)) {\n          console.log(\"inside reload: \", currentPage, totalPages)\n          if (currentPage >= totalPages) localStorage.setItem(\"currentPage\", (currentPage - 1) ? currentPage - 1 : currentPage)\n          setDirty(true)\n          return\n        }\n        localStorage.setItem(\"totalItems\", totalItems)\n        setTaskList(tlist)\n      }\n      else if (parsedMessage.operation === \"update\") {\n        parsedMessage.deadline = parsedMessage.deadline && dayjs(parsedMessage.deadline)\n        tlist = tlist.filter(t => t.id !== parseInt(taskId));\n        tlist.push(parsedMessage)\n        setTaskList(tlist)\n      }\n      else if (parsedMessage.operation === \"creation\") {\n        console.log(parsedMessage)///\n        const lengthBefore = tlist.length\n        tlist = tlist.filter(t => t.id !== parseInt(taskId));\n        parsedMessage.deadline = parsedMessage.deadline && dayjs(parsedMessage.deadline)\n\n        const maxSizePage = localStorage.getItem(\"maxSizePage\")\n        const currentPage = localStorage.getItem(\"currentPage\")\n        const totalPages = localStorage.getItem(\"totalPages\")\n\n        const totalItems = parseInt(localStorage.getItem(\"totalItems\")) + 1 + tlist.length - lengthBefore\n\n        if (totalItems > maxSizePage * totalPages) {\n          console.log(\"dirty because:\", totalItems, maxSizePage * totalPages)\n          setDirty(true)\n          return\n        }\n        localStorage.setItem(\"totalItems\", totalItems)\n        // only add the task if on the last page and \n        //if (tlist.length >= maxSizePage) return\n\n        if (currentPage !== totalPages) return\n        tlist.push(parsedMessage)\n        console.log(tlist)\n        setTaskList(tlist)\n      }\n    }\n    const displayTaskSelection = (topic, parsedMessage) => {\n      const taskId = parseInt(topic.split(\"/\")[2]);\n      var index = assignedTaskList.findIndex(x => x.taskId === taskId);\n      let objectStatus = { taskId: taskId, userName: parsedMessage.userName, status: parsedMessage.status };\n      index === -1 ? assignedTaskList.push(objectStatus) : assignedTaskList[index] = objectStatus;\n      setAssignedTaskList(assignedTaskList.map(a => a))\n    }\n    if (done !== true) {\n      MQTTSetup(displayTaskSelection, updatePublicTasksInfo);\n      done = true\n    }\n  }, [assignedTaskList]);\n\n\n  const deleteTask = (task) => {\n    API.deleteTask(task)\n      .then(() => {\n        // if last task of the page, \n        if (taskList.length - 1 === 0) {\n          const currentPage = localStorage.getItem(\"currentPage\")\n          localStorage.setItem(\"currentPage\", (currentPage - 1)?currentPage-1:currentPage)\n        }\n        setDirty(true)        \n      })\n      .catch(e => handleErrors(e))\n  }\n\n  const completeTask = (task) => {\n    API.completeTask(task)\n      .then(() => { setDirty(true) })\n      .catch(e => handleErrors(e))\n  }\n\n\n  const findTask = (id) => {\n    return taskList.find(t => t.id === id);\n  }\n\n\n\n  const selectTask = (task) => {\n    API.selectTask(task, user.id)\n      .then(() => API.getUserInfo()).then(() => setTaskList(setActiveTask(taskList)))\n      .catch(e => handleErrors(e))\n  }\n\n  // show error message in toast\n  const handleErrors = (err) => {\n    setMessage({ msg: err.error, type: 'danger' });\n    console.log(err.error);\n  }\n\n\n  // add or update a task into the list\n  const handleSaveOrUpdate = (task) => {\n\n    // if the task has an id it is an update\n    if (task.id) {\n      API.updateTask(task)\n        .then(response => {\n          if (response.ok) {\n            API.getTasks(activeFilter, localStorage.getItem('currentPage'))\n              .then(tasks => {\n                setTaskList(setActiveTask(tasks));\n              }).catch(e => handleErrors(e));\n          }\n        }).catch(e => handleErrors(e));\n\n      // otherwise it is a new task to add\n    } else {\n      API.addTask(task)\n        .then(() => setDirty(true))\n        .catch(e => handleErrors(e));\n    }\n    setSelectedTask(MODAL.CLOSED);\n  }\n\n  const handleEdit = (task) => {\n    setSelectedTask(task.id);\n  }\n\n  const handleClose = () => {\n    setSelectedTask(MODAL.CLOSED);\n  }\n\n\n\n  const handleLogOut = async () => {\n\n    await API.logOut()\n    // clean up everything\n    setLoggedIn(false);\n    setUser(null);\n    subscribeToAll(false, \"tasks/public/\")\n    differentialSubscribe([], \"tasks/selection/\");\n    setTaskList([]);\n    setDirty(true);\n    localStorage.removeItem('activeTask');\n  }\n\n\n  return (\n\n    <Container fluid>\n      <Row>\n        <Navigation onLogOut={handleLogOut} loggedIn={loggedIn} user={user} />\n      </Row>\n\n      <Toast show={message !== ''} onClose={() => setMessage('')} delay={3000} autohide>\n        <Toast.Body>{message?.msg}</Toast.Body>\n      </Toast>\n\n      <Switch>\n        <Route path=\"/login\">\n          <Row className=\"vh-100 below-nav\">\n            {loggedIn ? <Redirect to=\"/\" /> : <LoginForm setUser={setUser} setLoggedIn={setLoggedIn} API={API} />}\n          </Row>\n        </Route>\n\n\n        <Route path=\"/public\">\n          <Row className=\"vheight-100\">\n            <Col sm={3} bg=\"light\" className=\"d-block col-4\" id=\"left-sidebar\">\n              <span>&nbsp;&nbsp;</span>\n              <MiniOnlineList onlineList={onlineList} />\n            </Col>\n            <Col className=\"col-8\">\n              <Row className=\"vh-100 below-nav\">\n                <PublicMgr publicList={taskList} setDirty={setDirty}></PublicMgr>\n              </Row>\n            </Col>\n          </Row>\n        </Route>\n\n        <Route path=\"/online\">\n          <Row className=\"vheight-100\">\n            <Col sm={3} bg=\"light\" className=\"d-block col-4\" id=\"left-sidebar\">\n              <span>&nbsp;&nbsp;</span>\n              <MiniOnlineList onlineList={onlineList} />\n            </Col>\n            <Col sm={8} className=\"below-nav\">\n              <h5><strong>Online Users</strong></h5>\n              <div className=\"user\">\n                <OnlineList usersList={onlineList} />\n              </div>\n            </Col>\n          </Row>\n        </Route>\n\n        <Route path=\"/assignment\">\n          {loggedIn ?\n            <Row className=\"vheight-100\">\n              <Col sm={3} bg=\"light\" className=\"d-block col-4\" id=\"left-sidebar\">\n                <span>&nbsp;&nbsp;</span>\n                <MiniOnlineList onlineList={onlineList} />\n              </Col>\n              <Col sm={8} bg=\"light\" id=\"left-sidebar\" className=\"collapse d-sm-block below-nav\">\n                <Assignments OwnedTaskList={OwnedTaskList} UserList={userList} handleErrors={handleErrors} />\n              </Col>\n            </Row>\n            : <Redirect to=\"/login\" />\n          } </Route>\n\n        <Route path={[\"/list/:filter\"]}>\n          {loggedIn ?\n            <Row className=\"vh-100 below-nav\">\n              <TaskMgr taskList={taskList} filter={activeFilter}\n                onDelete={deleteTask} onEdit={handleEdit} onComplete={completeTask}\n                onCheck={selectTask} history={history}\n                refresh={setDirty} onlineList={onlineList} assignedTaskList={assignedTaskList}></TaskMgr>\n              <Button variant=\"success\" size=\"lg\" className=\"fixed-right-bottom\" onClick={() => setSelectedTask(MODAL.ADD)}>+</Button>\n              {(selectedTask !== MODAL.CLOSED) && <ModalForm task={findTask(selectedTask)} onSave={handleSaveOrUpdate} onClose={handleClose}></ModalForm>}\n            </Row> : <Redirect to=\"/login\" />\n          }\n        </Route>\n        <Route>\n          <Redirect to=\"/list/owned\" />\n        </Route>\n      </Switch>\n    </Container>\n\n  );\n\n}\n\n\nconst TaskMgr = (props) => {\n\n  const { taskList, filter, onDelete, onEdit, onComplete, onCheck, history, refresh, onlineList, assignedTaskList } = props;\n\n\n  // ** FILTER DEFINITIONS **\n  const filters = {\n    'owned': { label: 'Owned Tasks', id: 'owned' },\n    'assigned': { label: 'Assigned Tasks', id: 'assigned' }\n  };\n\n  // if filter is not known apply \"all\"\n  const activeFilter = (filter && filter in filters) ? filter : 'owned';\n\n  return (\n    <>\n      <Col sm={3} bg=\"light\" className=\"d-block col-4\" id=\"left-sidebar\">\n        <Filters items={filters} defaultActiveKey={activeFilter} history={history} />\n        <MiniOnlineList onlineList={onlineList} />\n      </Col>\n      <Col className=\"col-8\">\n        <h1 className=\"pb-3\">Filter: <small className=\"text-muted\">{activeFilter}</small></h1>\n        <ContentList\n          tasks={taskList}\n          onDelete={onDelete} onEdit={onEdit} onCheck={onCheck} onComplete={onComplete}\n          filter={activeFilter} refresh={refresh} assignedTaskList={assignedTaskList}\n        />\n      </Col>\n    </>\n  )\n\n}\n\n\nconst PublicMgr = (props) => {\n\n  const { publicList, setDirty } = props;\n\n\n  return (\n    <>\n      <Col className=\"col-8\">\n        <h1 className=\"pb-3\">Public Tasks</h1>\n        <PublicList\n          tasks={publicList} refresh={setDirty}\n        />\n      </Col>\n    </>\n  )\n\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}