{"ast":null,"code":"function Stack(container) {\n  var _this = this;\n\n  if (container === void 0) {\n    container = [];\n  }\n\n  var len = 0;\n  var stack = [];\n\n  this.size = function () {\n    return len;\n  };\n\n  this.empty = function () {\n    return len === 0;\n  };\n\n  this.clear = function () {\n    len = 0;\n    stack.length = 0;\n  };\n\n  this.push = function (element) {\n    stack.push(element);\n    ++len;\n  };\n\n  this.pop = function () {\n    stack.pop();\n    if (len > 0) --len;\n  };\n\n  this.top = function () {\n    return stack[len - 1];\n  };\n\n  container.forEach(function (element) {\n    return _this.push(element);\n  });\n  Object.freeze(this);\n}\n\nObject.freeze(Stack);\nexport default Stack;","map":{"version":3,"sources":["/home/labinf/exam-call-1-oxhunt/Client/node_modules/js-sdsl/dist/esm/Stack/Stack.js"],"names":["Stack","container","_this","len","stack","size","empty","clear","length","push","element","pop","top","forEach","Object","freeze"],"mappings":"AAAA,SAASA,KAAT,CAAeC,SAAf,EAA0B;AACtB,MAAIC,KAAK,GAAG,IAAZ;;AACA,MAAID,SAAS,KAAK,KAAK,CAAvB,EAA0B;AAAEA,IAAAA,SAAS,GAAG,EAAZ;AAAiB;;AAC7C,MAAIE,GAAG,GAAG,CAAV;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAKC,IAAL,GAAY,YAAY;AACpB,WAAOF,GAAP;AACH,GAFD;;AAGA,OAAKG,KAAL,GAAa,YAAY;AACrB,WAAOH,GAAG,KAAK,CAAf;AACH,GAFD;;AAGA,OAAKI,KAAL,GAAa,YAAY;AACrBJ,IAAAA,GAAG,GAAG,CAAN;AACAC,IAAAA,KAAK,CAACI,MAAN,GAAe,CAAf;AACH,GAHD;;AAIA,OAAKC,IAAL,GAAY,UAAUC,OAAV,EAAmB;AAC3BN,IAAAA,KAAK,CAACK,IAAN,CAAWC,OAAX;AACA,MAAEP,GAAF;AACH,GAHD;;AAIA,OAAKQ,GAAL,GAAW,YAAY;AACnBP,IAAAA,KAAK,CAACO,GAAN;AACA,QAAIR,GAAG,GAAG,CAAV,EACI,EAAEA,GAAF;AACP,GAJD;;AAKA,OAAKS,GAAL,GAAW,YAAY;AACnB,WAAOR,KAAK,CAACD,GAAG,GAAG,CAAP,CAAZ;AACH,GAFD;;AAGAF,EAAAA,SAAS,CAACY,OAAV,CAAkB,UAAUH,OAAV,EAAmB;AAAE,WAAOR,KAAK,CAACO,IAAN,CAAWC,OAAX,CAAP;AAA6B,GAApE;AACAI,EAAAA,MAAM,CAACC,MAAP,CAAc,IAAd;AACH;;AACDD,MAAM,CAACC,MAAP,CAAcf,KAAd;AACA,eAAeA,KAAf","sourcesContent":["function Stack(container) {\n    var _this = this;\n    if (container === void 0) { container = []; }\n    var len = 0;\n    var stack = [];\n    this.size = function () {\n        return len;\n    };\n    this.empty = function () {\n        return len === 0;\n    };\n    this.clear = function () {\n        len = 0;\n        stack.length = 0;\n    };\n    this.push = function (element) {\n        stack.push(element);\n        ++len;\n    };\n    this.pop = function () {\n        stack.pop();\n        if (len > 0)\n            --len;\n    };\n    this.top = function () {\n        return stack[len - 1];\n    };\n    container.forEach(function (element) { return _this.push(element); });\n    Object.freeze(this);\n}\nObject.freeze(Stack);\nexport default Stack;\n"]},"metadata":{},"sourceType":"module"}