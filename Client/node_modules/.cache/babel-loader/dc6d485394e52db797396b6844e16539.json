{"ast":null,"code":"var _jsxFileName = \"/home/labinf/exam-call-1-oxhunt/Client/src/components/PublicList.js\";\nimport dayjs from 'dayjs';\nimport isYesterday from 'dayjs/plugin/isYesterday';\nimport isTomorrow from 'dayjs/plugin/isTomorrow';\nimport isToday from 'dayjs/plugin/isToday';\nimport { Form, ListGroup } from 'react-bootstrap/';\nimport { PersonSquare } from 'react-bootstrap-icons';\nimport Pagination from \"react-js-pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ndayjs.extend(isYesterday).extend(isToday).extend(isTomorrow);\n\nconst formatDeadline = d => {\n  if (!d) return '--o--';else if (d.isToday()) {\n    return d.format('[Today at] HH:mm');\n  } else if (d.isTomorrow()) {\n    return d.format('[Tomorrow at] HH:mm');\n  } else if (d.isYesterday()) {\n    return d.format('[Yesterday at] HH:mm');\n  } else {\n    return d.format('dddd DD MMMM YYYY [at] HH:mm');\n  }\n};\n\nconst TaskRowData = props => {\n  const {\n    task\n  } = props;\n  const labelClassName = `${task.important ? 'important' : ''} ${task.completed ? 'completed' : ''}`;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-fill m-auto\",\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"m-0\",\n        controlId: \"formBasicCheckbox\",\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check.Label, {\n            className: labelClassName,\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-fill mx-2 m-auto\",\n      children: /*#__PURE__*/_jsxDEV(PersonSquare, {\n        className: task.private ? 'invisible' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 46\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-fill m-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: formatDeadline(task.deadline)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = TaskRowData;\n\nconst PublicList = props => {\n  const {\n    tasks,\n    refresh\n  } = props; // handle change event\n\n  const handlePageChange = pageNumber => {\n    localStorage.setItem(\"currentPage\", pageNumber);\n    refresh(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n      as: \"ul\",\n      variant: \"flush\",\n      children: tasks.map(t => {\n        return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          as: \"li\",\n          className: \"d-flex w-100 justify-content-between\",\n          children: /*#__PURE__*/_jsxDEV(TaskRowData, {\n            task: t\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this)\n        }, t.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      itemClass: \"page-item\" // add it for bootstrap 4\n      ,\n      linkClass: \"page-link\" // add it for bootstrap 4\n      ,\n      activePage: parseInt(localStorage.getItem(\"currentPage\")),\n      itemsCountPerPage: parseInt(localStorage.getItem(\"totalItems\")) / parseInt(localStorage.getItem(\"totalPages\")),\n      totalItemsCount: parseInt(localStorage.getItem(\"totalItems\")),\n      pageRangeDisplayed: 10,\n      onChange: handlePageChange,\n      pageSize: parseInt(localStorage.getItem(\"totalPages\"))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = PublicList;\nexport default PublicList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TaskRowData\");\n$RefreshReg$(_c2, \"PublicList\");","map":{"version":3,"sources":["/home/labinf/exam-call-1-oxhunt/Client/src/components/PublicList.js"],"names":["dayjs","isYesterday","isTomorrow","isToday","Form","ListGroup","PersonSquare","Pagination","extend","formatDeadline","d","format","TaskRowData","props","task","labelClassName","important","completed","description","private","deadline","PublicList","tasks","refresh","handlePageChange","pageNumber","localStorage","setItem","map","t","id","parseInt","getItem"],"mappings":"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","sourcesContent":["\nimport dayjs from 'dayjs';\nimport isYesterday from 'dayjs/plugin/isYesterday';\nimport isTomorrow from 'dayjs/plugin/isTomorrow';\nimport isToday from 'dayjs/plugin/isToday';\n\nimport { Form, ListGroup } from 'react-bootstrap/';\nimport { PersonSquare } from 'react-bootstrap-icons';\nimport Pagination from \"react-js-pagination\";\n\ndayjs.extend(isYesterday).extend(isToday).extend(isTomorrow);\n\n\nconst formatDeadline = (d) => {\n  if (!d) return '--o--';\n  else if (d.isToday()) {\n    return d.format('[Today at] HH:mm');\n  } else if (d.isTomorrow()) {\n    return d.format('[Tomorrow at] HH:mm');\n  } else if (d.isYesterday()) {\n    return d.format('[Yesterday at] HH:mm');\n  } else {\n    return d.format('dddd DD MMMM YYYY [at] HH:mm');\n  }\n}\n\nconst TaskRowData = (props) => {\n  const { task} = props;\n  const labelClassName = `${task.important ? 'important' : ''} ${task.completed ? 'completed' : ''}`;\n\n  return (\n    <>\n      <div className=\"flex-fill m-auto\">\n        <Form.Group className=\"m-0\" controlId=\"formBasicCheckbox\">\n          <Form.Check type=\"checkbox\">\n            <Form.Check.Label className={labelClassName} >{task.description}</Form.Check.Label>\n          </Form.Check>\n        </Form.Group></div>\n      <div className=\"flex-fill mx-2 m-auto\"><PersonSquare className={task.private ? 'invisible' : ''} /></div>\n      <div className=\"flex-fill m-auto\"><small>{formatDeadline(task.deadline)}</small></div>\n    </>\n  )\n}\n\n\nconst PublicList = (props) => {\n  const { tasks, refresh } = props;\n\n\n\n  // handle change event\n  const handlePageChange = pageNumber => {\n      localStorage.setItem(\"currentPage\", pageNumber)\n      refresh(true);\n  }\n\n\n  return (\n    <>\n      <ListGroup as=\"ul\" variant=\"flush\">\n       \n        {\n          tasks.map(t => {\n            return (\n              <ListGroup.Item as=\"li\" key={t.id} className=\"d-flex w-100 justify-content-between\">\n                  <TaskRowData task={t} />\n              </ListGroup.Item>\n            );\n          })\n        }\n      </ListGroup>\n      <Pagination \n          itemClass=\"page-item\" // add it for bootstrap 4\n          linkClass=\"page-link\" // add it for bootstrap 4\n          activePage={parseInt(localStorage.getItem(\"currentPage\"))}\n          itemsCountPerPage={parseInt(localStorage.getItem(\"totalItems\"))/parseInt(localStorage.getItem(\"totalPages\"))}\n          totalItemsCount={parseInt(localStorage.getItem(\"totalItems\"))}\n          pageRangeDisplayed={10}\n          onChange={handlePageChange}\n          pageSize ={parseInt(localStorage.getItem(\"totalPages\")) }\n      />\n    </>\n  )\n}\n\nexport default PublicList;"]},"metadata":{},"sourceType":"module"}