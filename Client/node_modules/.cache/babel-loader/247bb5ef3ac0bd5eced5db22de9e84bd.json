{"ast":null,"code":"import moment from 'moment';\n\nclass Task {\n  constructor(id, description, important, privateTask, deadline, project, completed, user, active) {\n    if (id) {\n      this.id = id;\n    }\n\n    this.description = description;\n    this.important = important;\n    this.private = privateTask;\n\n    if (deadline !== undefined) {\n      this.deadline = moment(new Date(deadline));\n    }\n\n    this.completed = completed || false;\n    this.user = user;\n    this.active = active;\n  }\n  /**\r\n   * Construct a Task from a plain object\r\n   * @param {{}} json \r\n   * @return {Task} the newly created Task object\r\n   */\n\n\n  static from(json) {\n    const t = Object.assign(new Task(), json);\n\n    if (t.deadline) {\n      t.deadline = moment(new Date(t.deadline));\n    }\n\n    return t;\n  }\n\n}\n\nexport default Task;","map":{"version":3,"sources":["/home/labinf/exam-call-1-oxhunt/Client/src/components/Task.js"],"names":["moment","Task","constructor","id","description","important","privateTask","deadline","project","completed","user","active","private","undefined","Date","from","json","t","Object","assign"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,IAAN,CAAU;AAENC,EAAAA,WAAW,CAACC,EAAD,EAAKC,WAAL,EAAkBC,SAAlB,EAA6BC,WAA7B,EAA0CC,QAA1C,EAAoDC,OAApD,EAA6DC,SAA7D,EAAuEC,IAAvE,EAA6EC,MAA7E,EAAqF;AAC5F,QAAGR,EAAH,EAAM;AACF,WAAKA,EAAL,GAAUA,EAAV;AACH;;AAED,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKO,OAAL,GAAeN,WAAf;;AAEA,QAAGC,QAAQ,KAAKM,SAAhB,EAA0B;AACtB,WAAKN,QAAL,GAAgBP,MAAM,CAAC,IAAIc,IAAJ,CAASP,QAAT,CAAD,CAAtB;AACH;;AAED,SAAKE,SAAL,GAAiBA,SAAS,IAAI,KAA9B;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACe,SAAJI,IAAI,CAACC,IAAD,EAAO;AACd,UAAMC,CAAC,GAAIC,MAAM,CAACC,MAAP,CAAc,IAAIlB,IAAJ,EAAd,EAA0Be,IAA1B,CAAX;;AACA,QAAGC,CAAC,CAACV,QAAL,EAAc;AACVU,MAAAA,CAAC,CAACV,QAAF,GAAaP,MAAM,CAAC,IAAIc,IAAJ,CAASG,CAAC,CAACV,QAAX,CAAD,CAAnB;AACH;;AACD,WAAOU,CAAP;AACH;;AA/BK;;AAmCV,eAAehB,IAAf","sourcesContent":["import moment from 'moment';\r\n\r\nclass Task{    \r\n\r\n    constructor(id, description, important, privateTask, deadline, project, completed,user, active) {\r\n        if(id){\r\n            this.id = id;\r\n        }\r\n            \r\n        this.description = description;\r\n        this.important = important;\r\n        this.private = privateTask;\r\n\r\n        if(deadline !== undefined){\r\n            this.deadline = moment(new Date(deadline));\r\n        }\r\n        \r\n        this.completed = completed || false;\r\n        this.user = user;\r\n        this.active = active;\r\n    }\r\n\r\n    /**\r\n     * Construct a Task from a plain object\r\n     * @param {{}} json \r\n     * @return {Task} the newly created Task object\r\n     */\r\n    static from(json) {\r\n        const t =  Object.assign(new Task(), json);\r\n        if(t.deadline){\r\n            t.deadline = moment(new Date(t.deadline));\r\n        }\r\n        return t;\r\n    }\r\n\r\n}\r\n\r\nexport default Task;\r\n\r\n"]},"metadata":{},"sourceType":"module"}