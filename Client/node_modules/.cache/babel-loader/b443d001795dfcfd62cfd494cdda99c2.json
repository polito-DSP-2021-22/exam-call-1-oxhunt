{"ast":null,"code":"var __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nimport Set from \"../Set/Set\";\nimport LinkList from \"../LinkList/LinkList\";\nHashSet.initSize = 1 << 4;\nHashSet.maxSize = 1 << 30;\nHashSet.sigma = 0.75; // default load factor\n\nHashSet.treeifyThreshold = 8;\nHashSet.untreeifyThreshold = 6;\nHashSet.minTreeifySize = 64;\n/**\n * Note that resize is a time-consuming operation, please try to determine the number of buckets before use.\n * @param container Initialize the container\n * @param initBucketNum Initialize the bucket num\n * @param hashFunc Function to map elements to numbers\n * @constructor\n */\n\nfunction HashSet(container, initBucketNum, hashFunc) {\n  var _this = this;\n\n  if (container === void 0) {\n    container = [];\n  }\n\n  if (initBucketNum === void 0) {\n    initBucketNum = HashSet.initSize;\n  }\n\n  hashFunc = hashFunc || function (x) {\n    var hashCode = 0;\n    var str = '';\n\n    if (typeof x === \"number\") {\n      hashCode = Math.floor(x);\n      hashCode = (hashCode << 5) - hashCode;\n      hashCode = hashCode & hashCode;\n    } else {\n      if (typeof x !== \"string\") {\n        str = JSON.stringify(x);\n      } else str = x;\n\n      for (var i = 0; i < str.length; i++) {\n        var character = str.charCodeAt(i);\n        hashCode = (hashCode << 5) - hashCode + character;\n        hashCode = hashCode & hashCode;\n      }\n    }\n\n    hashCode ^= hashCode >>> 16;\n    return hashCode;\n  };\n\n  if ((initBucketNum & initBucketNum - 1) !== 0) {\n    throw new Error(\"initBucketNum must be 2 to the power of n\");\n  }\n\n  var len = 0;\n  var hashTable = [];\n  var bucketNum = Math.max(HashSet.initSize, Math.min(HashSet.maxSize, initBucketNum));\n\n  this.size = function () {\n    return len;\n  };\n\n  this.empty = function () {\n    return len === 0;\n  };\n\n  this.clear = function () {\n    len = 0;\n    bucketNum = initBucketNum;\n    hashTable = [];\n  };\n\n  this.forEach = function (callback) {\n    var index = 0;\n    hashTable.forEach(function (container) {\n      container.forEach(function (element) {\n        callback(element, index++);\n      });\n    });\n  };\n\n  var reAllocate = function (originalBucketNum) {\n    if (originalBucketNum >= HashSet.maxSize) return;\n    bucketNum = originalBucketNum * 2;\n    var newHashTable = [];\n    hashTable.forEach(function (container, index) {\n      if (container.empty()) return;\n\n      if (container instanceof LinkList && container.size() === 1) {\n        var element = container.front();\n        if (element === undefined) throw new Error(\"unknown error\");\n        newHashTable[hashFunc(element) & bucketNum - 1] = new LinkList([element]);\n      } else if (container instanceof Set) {\n        var lowList_1 = new LinkList();\n        var highList_1 = new LinkList();\n        container.forEach(function (element) {\n          var hashCode = hashFunc(element);\n\n          if ((hashCode & originalBucketNum) === 0) {\n            lowList_1.pushBack(element);\n          } else highList_1.pushBack(element);\n        });\n        if (lowList_1.size() > HashSet.untreeifyThreshold) newHashTable[index] = new Set(lowList_1);else if (lowList_1.size()) newHashTable[index] = lowList_1;\n        if (highList_1.size() > HashSet.untreeifyThreshold) newHashTable[index + originalBucketNum] = new Set(highList_1);else if (highList_1.size()) newHashTable[index + originalBucketNum] = highList_1;\n      } else {\n        var lowList_2 = new LinkList();\n        var highList_2 = new LinkList();\n        container.forEach(function (element) {\n          var hashCode = hashFunc(element);\n\n          if ((hashCode & originalBucketNum) === 0) {\n            lowList_2.pushBack(element);\n          } else highList_2.pushBack(element);\n        });\n        if (lowList_2.size()) newHashTable[index] = lowList_2;\n        if (highList_2.size()) newHashTable[index + originalBucketNum] = highList_2;\n      }\n\n      hashTable[index].clear();\n    });\n    hashTable = newHashTable;\n  };\n\n  this.insert = function (element) {\n    if (element === null || element === undefined) {\n      throw new Error(\"to avoid some unnecessary errors, we don't suggest you insert null or undefined here\");\n    }\n\n    var index = hashFunc(element) & bucketNum - 1;\n\n    if (!hashTable[index]) {\n      hashTable[index] = new LinkList([element]);\n      ++len;\n    } else {\n      var preSize = hashTable[index].size();\n\n      if (hashTable[index] instanceof LinkList) {\n        if (hashTable[index].find(element)) return;\n        hashTable[index].pushBack(element);\n\n        if (hashTable[index].size() >= HashSet.treeifyThreshold) {\n          hashTable[index] = new Set(hashTable[index]);\n        }\n      } else hashTable[index].insert(element);\n\n      var curSize = hashTable[index].size();\n      len += curSize - preSize;\n    }\n\n    if (len > bucketNum * HashSet.sigma) {\n      reAllocate.call(this, bucketNum);\n    }\n  };\n\n  this.eraseElementByValue = function (element) {\n    var index = hashFunc(element) & bucketNum - 1;\n    if (!hashTable[index]) return;\n    var preSize = hashTable[index].size();\n    hashTable[index].eraseElementByValue(element);\n\n    if (hashTable[index] instanceof Set) {\n      if (hashTable[index].size() <= HashSet.untreeifyThreshold) {\n        hashTable[index] = new LinkList(hashTable[index]);\n      }\n    }\n\n    var curSize = hashTable[index].size();\n    len += curSize - preSize;\n  };\n\n  this.find = function (element) {\n    var index = hashFunc(element) & bucketNum - 1;\n    if (!hashTable[index]) return false;\n    return hashTable[index].find(element);\n  };\n\n  this[Symbol.iterator] = function () {\n    return function () {\n      var index, _a, _b, element, e_1_1;\n\n      var e_1, _c;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            index = 0;\n            _d.label = 1;\n\n          case 1:\n            if (!(index < bucketNum)) return [3\n            /*break*/\n            , 10];\n\n            while (index < bucketNum && !hashTable[index]) ++index;\n\n            if (index >= bucketNum) return [3\n            /*break*/\n            , 10];\n            _d.label = 2;\n\n          case 2:\n            _d.trys.push([2, 7, 8, 9]);\n\n            _a = (e_1 = void 0, __values(hashTable[index])), _b = _a.next();\n            _d.label = 3;\n\n          case 3:\n            if (!!_b.done) return [3\n            /*break*/\n            , 6];\n            element = _b.value;\n            return [4\n            /*yield*/\n            , element];\n\n          case 4:\n            _d.sent();\n\n            _d.label = 5;\n\n          case 5:\n            _b = _a.next();\n            return [3\n            /*break*/\n            , 3];\n\n          case 6:\n            return [3\n            /*break*/\n            , 9];\n\n          case 7:\n            e_1_1 = _d.sent();\n            e_1 = {\n              error: e_1_1\n            };\n            return [3\n            /*break*/\n            , 9];\n\n          case 8:\n            try {\n              if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n            } finally {\n              if (e_1) throw e_1.error;\n            }\n\n            return [7\n            /*endfinally*/\n            ];\n\n          case 9:\n            ++index;\n            return [3\n            /*break*/\n            , 1];\n\n          case 10:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    }();\n  };\n\n  container.forEach(function (element) {\n    return _this.insert(element);\n  });\n  Object.freeze(this);\n}\n\nObject.freeze(HashSet);\nexport default HashSet;","map":{"version":3,"sources":["/home/labinf/exam-call-1-oxhunt/Client/node_modules/js-sdsl/dist/esm/HashSet/HashSet.js"],"names":["__generator","thisArg","body","_","label","sent","t","trys","ops","f","y","g","next","verb","Symbol","iterator","n","v","step","op","TypeError","call","done","value","pop","length","push","e","__values","o","s","m","i","Set","LinkList","HashSet","initSize","maxSize","sigma","treeifyThreshold","untreeifyThreshold","minTreeifySize","container","initBucketNum","hashFunc","_this","x","hashCode","str","Math","floor","JSON","stringify","character","charCodeAt","Error","len","hashTable","bucketNum","max","min","size","empty","clear","forEach","callback","index","element","reAllocate","originalBucketNum","newHashTable","front","undefined","lowList_1","highList_1","pushBack","lowList_2","highList_2","insert","preSize","find","curSize","eraseElementByValue","_a","_b","e_1_1","e_1","_c","_d","error","return","Object","freeze"],"mappings":"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","sourcesContent":["var __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport Set from \"../Set/Set\";\nimport LinkList from \"../LinkList/LinkList\";\nHashSet.initSize = (1 << 4);\nHashSet.maxSize = (1 << 30);\nHashSet.sigma = 0.75; // default load factor\nHashSet.treeifyThreshold = 8;\nHashSet.untreeifyThreshold = 6;\nHashSet.minTreeifySize = 64;\n/**\n * Note that resize is a time-consuming operation, please try to determine the number of buckets before use.\n * @param container Initialize the container\n * @param initBucketNum Initialize the bucket num\n * @param hashFunc Function to map elements to numbers\n * @constructor\n */\nfunction HashSet(container, initBucketNum, hashFunc) {\n    var _this = this;\n    if (container === void 0) { container = []; }\n    if (initBucketNum === void 0) { initBucketNum = HashSet.initSize; }\n    hashFunc = hashFunc || (function (x) {\n        var hashCode = 0;\n        var str = '';\n        if (typeof x === \"number\") {\n            hashCode = Math.floor(x);\n            hashCode = ((hashCode << 5) - hashCode);\n            hashCode = hashCode & hashCode;\n        }\n        else {\n            if (typeof x !== \"string\") {\n                str = JSON.stringify(x);\n            }\n            else\n                str = x;\n            for (var i = 0; i < str.length; i++) {\n                var character = str.charCodeAt(i);\n                hashCode = ((hashCode << 5) - hashCode) + character;\n                hashCode = hashCode & hashCode;\n            }\n        }\n        hashCode ^= (hashCode >>> 16);\n        return hashCode;\n    });\n    if ((initBucketNum & (initBucketNum - 1)) !== 0) {\n        throw new Error(\"initBucketNum must be 2 to the power of n\");\n    }\n    var len = 0;\n    var hashTable = [];\n    var bucketNum = Math.max(HashSet.initSize, Math.min(HashSet.maxSize, initBucketNum));\n    this.size = function () {\n        return len;\n    };\n    this.empty = function () {\n        return len === 0;\n    };\n    this.clear = function () {\n        len = 0;\n        bucketNum = initBucketNum;\n        hashTable = [];\n    };\n    this.forEach = function (callback) {\n        var index = 0;\n        hashTable.forEach(function (container) {\n            container.forEach(function (element) {\n                callback(element, index++);\n            });\n        });\n    };\n    var reAllocate = function (originalBucketNum) {\n        if (originalBucketNum >= HashSet.maxSize)\n            return;\n        bucketNum = originalBucketNum * 2;\n        var newHashTable = [];\n        hashTable.forEach(function (container, index) {\n            if (container.empty())\n                return;\n            if (container instanceof LinkList && container.size() === 1) {\n                var element = container.front();\n                if (element === undefined)\n                    throw new Error(\"unknown error\");\n                newHashTable[hashFunc(element) & (bucketNum - 1)] = new LinkList([element]);\n            }\n            else if (container instanceof Set) {\n                var lowList_1 = new LinkList();\n                var highList_1 = new LinkList();\n                container.forEach(function (element) {\n                    var hashCode = hashFunc(element);\n                    if ((hashCode & originalBucketNum) === 0) {\n                        lowList_1.pushBack(element);\n                    }\n                    else\n                        highList_1.pushBack(element);\n                });\n                if (lowList_1.size() > HashSet.untreeifyThreshold)\n                    newHashTable[index] = new Set(lowList_1);\n                else if (lowList_1.size())\n                    newHashTable[index] = lowList_1;\n                if (highList_1.size() > HashSet.untreeifyThreshold)\n                    newHashTable[index + originalBucketNum] = new Set(highList_1);\n                else if (highList_1.size())\n                    newHashTable[index + originalBucketNum] = highList_1;\n            }\n            else {\n                var lowList_2 = new LinkList();\n                var highList_2 = new LinkList();\n                container.forEach(function (element) {\n                    var hashCode = hashFunc(element);\n                    if ((hashCode & originalBucketNum) === 0) {\n                        lowList_2.pushBack(element);\n                    }\n                    else\n                        highList_2.pushBack(element);\n                });\n                if (lowList_2.size())\n                    newHashTable[index] = lowList_2;\n                if (highList_2.size())\n                    newHashTable[index + originalBucketNum] = highList_2;\n            }\n            hashTable[index].clear();\n        });\n        hashTable = newHashTable;\n    };\n    this.insert = function (element) {\n        if (element === null || element === undefined) {\n            throw new Error(\"to avoid some unnecessary errors, we don't suggest you insert null or undefined here\");\n        }\n        var index = hashFunc(element) & (bucketNum - 1);\n        if (!hashTable[index]) {\n            hashTable[index] = new LinkList([element]);\n            ++len;\n        }\n        else {\n            var preSize = hashTable[index].size();\n            if (hashTable[index] instanceof LinkList) {\n                if (hashTable[index].find(element))\n                    return;\n                hashTable[index].pushBack(element);\n                if (hashTable[index].size() >= HashSet.treeifyThreshold) {\n                    hashTable[index] = new Set(hashTable[index]);\n                }\n            }\n            else\n                hashTable[index].insert(element);\n            var curSize = hashTable[index].size();\n            len += curSize - preSize;\n        }\n        if (len > bucketNum * HashSet.sigma) {\n            reAllocate.call(this, bucketNum);\n        }\n    };\n    this.eraseElementByValue = function (element) {\n        var index = hashFunc(element) & (bucketNum - 1);\n        if (!hashTable[index])\n            return;\n        var preSize = hashTable[index].size();\n        hashTable[index].eraseElementByValue(element);\n        if (hashTable[index] instanceof Set) {\n            if (hashTable[index].size() <= HashSet.untreeifyThreshold) {\n                hashTable[index] = new LinkList(hashTable[index]);\n            }\n        }\n        var curSize = hashTable[index].size();\n        len += curSize - preSize;\n    };\n    this.find = function (element) {\n        var index = hashFunc(element) & (bucketNum - 1);\n        if (!hashTable[index])\n            return false;\n        return hashTable[index].find(element);\n    };\n    this[Symbol.iterator] = function () {\n        return (function () {\n            var index, _a, _b, element, e_1_1;\n            var e_1, _c;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        index = 0;\n                        _d.label = 1;\n                    case 1:\n                        if (!(index < bucketNum)) return [3 /*break*/, 10];\n                        while (index < bucketNum && !hashTable[index])\n                            ++index;\n                        if (index >= bucketNum)\n                            return [3 /*break*/, 10];\n                        _d.label = 2;\n                    case 2:\n                        _d.trys.push([2, 7, 8, 9]);\n                        _a = (e_1 = void 0, __values(hashTable[index])), _b = _a.next();\n                        _d.label = 3;\n                    case 3:\n                        if (!!_b.done) return [3 /*break*/, 6];\n                        element = _b.value;\n                        return [4 /*yield*/, element];\n                    case 4:\n                        _d.sent();\n                        _d.label = 5;\n                    case 5:\n                        _b = _a.next();\n                        return [3 /*break*/, 3];\n                    case 6: return [3 /*break*/, 9];\n                    case 7:\n                        e_1_1 = _d.sent();\n                        e_1 = { error: e_1_1 };\n                        return [3 /*break*/, 9];\n                    case 8:\n                        try {\n                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                        return [7 /*endfinally*/];\n                    case 9:\n                        ++index;\n                        return [3 /*break*/, 1];\n                    case 10: return [2 /*return*/];\n                }\n            });\n        })();\n    };\n    container.forEach(function (element) { return _this.insert(element); });\n    Object.freeze(this);\n}\nObject.freeze(HashSet);\nexport default HashSet;\n"]},"metadata":{},"sourceType":"module"}